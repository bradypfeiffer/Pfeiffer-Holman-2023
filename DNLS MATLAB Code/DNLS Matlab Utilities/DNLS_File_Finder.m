function [ArchiveBase, ActiveArchiveBase, ParentFolder] = DNLS_File_Finder()
 %**********************************************************************
    %                  Determine Paths to Parent and Archive Folders
    %**********************************************************************
    %   Will read from *.txt file or use default location.
    %   Output and usage looks lie ...
    %   [ArchiveBase, ActiveArchiveBase, ParentFolder] = DNLS_File_Finder();
    %
    %   There is an assumed folder structure:
    %   'Matlab Code Sandbox' <-- or other name: a folder which contains
    %       archives and code to be used
    %       --> 'Archive' ... a subfolder of 'Matlab Code Sandbox' which
    %           will contain trial data generated by the code
    %       --> 'DNLS Matlab Code' ... a subfolder of 'Matlab Code Sandbox'
    %           containing all matlab code scripts
    %       --> 'DNLS_File_Location.txt' 
    %           ... a text file in 'Matlab Code Sandbox' containing just
    %           two lines:
    %             --> the first line is the address to the Archive folder
    %            containing trials you wish to be written to or read from
    %             --> the second line is the address to the parent folder
    %            containing the 'Matlab Code', DNLS_File_Locations as well
    %            as the Archive folder

filepath = fileparts(mfilename('fullpath'));
filepathparts=split(filepath,{'\','.'});
filepathpartsLen=length(split(filepath,{'\','.'}));
ParentFolder = filepathparts{1};
for i = 2:(filepathpartsLen -2)
    ParentFolder = [ParentFolder,'\',filepathparts{i}];
end

Folder_Address_File = '\DNLS_File_Locations.txt';
File_Path = [ParentFolder,Folder_Address_File];
File_NameTmp = split(File_Path,{'\','.'});

if ~exist(File_Path)
    ArchiveTxtFilePath = [ParentFolder,File_Path] ;
    ArchiveTxtFile = fopen(ArchiveTxtFilePath);             
else
    ArchiveTxtFilePath = File_Path ;
    ArchiveTxtFile = fopen(ArchiveTxtFilePath);
end

if ArchiveTxtFile < 1
%                 [ArchiveTxtFile, ' does not exist.']
    %['Assuming Archive is stored in same parent folder of Matlab Code:']
    ArchiveBase = [ParentFolder,'\Archive'] ;
    if ~exist(ActiveArchiveBase)
        clc;
        fprintf('*************************\n  Existential Failure! \n*************************\n')
        fprintf('Neither %s',ArchiveTxtFilePath)
        fprintf('\n       ...   or the default folder   ... \n')
        fprintf('%s',ActiveArchiveBase)
        fprintf('\n            exist!\n*************************\n')
        fclose('all');
        return;
    end
elseif ArchiveTxtFile > 1
    ArchiveBase = [ParentFolder,'\Archive'] ;
    ActiveArchiveBaseTmp = fgetl(ArchiveTxtFile);
    stars = '******************************************\n';
    errline = strcat({'    '},Folder_Address_File,' Format Failure!   \n');
    if ischar(ActiveArchiveBaseTmp) && strfind(ActiveArchiveBaseTmp,'Archive') && exist(ActiveArchiveBaseTmp)
        ActiveArchiveBase = ActiveArchiveBaseTmp;                    
    else
        clc;
        fprintf(strcat(stars,errline,'1st line with Archive Folder path error'));
        fprintf(strcat(ActiveArchiveBaseTmp,'\n Not found, not an Archive or does not exist.\n',stars));
        fclose('all');
        return;
    end
    ParentFolderTmp = fgetl(ArchiveTxtFile);
    if ischar(ParentFolderTmp)
        if ~exist(ParentFolderTmp)
            clc;
            fprintf(strcat(stars,'         Existential Failure! \n',stars));
            fprintf(strcat('      ',ParentFolderTmp, ':  Does not exist! \n',stars));
            fclose('all');
            return;                       
        else
            NewParentFolder = ParentFolderTmp;
            cd(NewParentFolder);
            addpath(genpath(pwd));
        end
    else
        clc;
        fprintf(strcat(stars,errline,' 2nd line with Parent Folder path missing  \n',stars));
        fclose('all');
        return;
    end



    fclose(ArchiveTxtFile);
end
fclose('all');

end